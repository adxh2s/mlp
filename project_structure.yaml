
project:
  name: mlp
  description: >
  mlp: EDA → Pipelines → Rapports (Hydra/Pydantic/Jinja), Streamlit multipages (routage programmatique),
    avec instrumentation centralisée (configuration + logging via LoggerManager/StructlogLoggerManager et LoggerMixin).
  directories:
  conf:
  description: Configurations Hydra composables en YAML.
  children:
  config.yaml: "Config racine Hydra; compose les blocs d’orchestrateurs"
  orchestrators:
  eda.yaml: "Paramètres EDA (YData Profiling, options)"
  pipelines.yaml: "Pipelines et grilles d’hyperparamètres"
  report.yaml: "Formats et options de rendu des rapports"
  src:
  description: Code Python structuré par phases ML + instrumentation.
  children:
  config:
  description: Schémas Pydantic (types de configuration).
  children:
  schemas.py: "Schémas Pydantic"
  instrumentation:
  description: Instrumentation (config + logging + mixin).
  children:
  config_manager.py: "Configuration Hydra→Pydantic"
  logger_manager.py: "LoggerManager (stdlib JSON/console)"
  logger_manager_structlog.py: "StructlogLoggerManager (hérite de LoggerManager)"
  logger_factory.py: "Factory de loggers (sélection backend)"
  logger_mixin.py: "LoggerMixin (injection self.log)"
  datanalysis:
  description: Exploration des données (audit/EDA).
  children:
  eda_profile.py: "YData Profiling (to_file)"
  eda_summary.py: "Synthèse JSON + flags"
  datavisualization:
  description: Rendu Jinja2.
  children:
  report_renderer.py: "Rendu HTML/MD depuis templates"
  preprocessing:
  description: Pré-traitements.
  children:
  selectors.py: "VarianceThreshold/SelectKBest/Percentile"
  reducers.py: "PCA/UMAP"
  samplers.py: "Extension imbalanced-learn"
  modeling:
  description: Construction/évaluation pipelines.
  children:
  pipeline_factory.py: "Assemblage Pipeline + grilles"
  evaluator.py: "GridSearchCV/StratifiedKFold"
  evaluation:
  description: Métriques/splits (extensible).
  children:
  metrics.py: "Métriques [placeholder]"
  splitting.py: "Splits avancés [placeholder]"
  orchestrators:
  description: Coordination EDA→Pipelines→Rapport.
  children:
  base.py: "Interface IOrchestrator"
  eda.py: "EDAOrchestrator (LoggerMixin)"
  pipelines.py: "PipelineOrchestrator (LoggerMixin)"
  report.py: "ReportOrchestrator (LoggerMixin)"
  general.py: "GeneralOrchestrator (LoggerMixin)"
  templates:
  description: Templates Jinja2 pour rapports.
  children:
  base.html.jinja: "Layout HTML de base"
  report.html.jinja: "Rapport HTML"
  report.md.jinja: "Rapport Markdown"
  streamlit_pages:
  description: Pages Streamlit (routage programmatique).
  children:
  home.py: "Accueil"
  eda.py: "EDA + YData (iframe / génération ad hoc)"
  pipelines.py: "Résultats CV et téléchargements"
  reports.py: "Rapports rendus (HTML/MD)"
  data:
  description: Données brutes/traitées.
  children:
  in: "Entrée de données (brutes)."
  out: "Sorties/exports (traitées)."
  files:
  streamlit_app.py: "Entrée Streamlit (st.Page/st.navigation)"
  main.py: "Entrée Hydra"
  requirements.txt: "Dépendances (Hydra, Pydantic, scikit-learn, Jinja2, Streamlit, etc.)"
  permissions:
  files:
  ".py": 755
  "conf/**/.yaml": 644
  "/*.yml": 644
  "/.md": 644
  "**/.json": 644
  "/*.csv": 644
  "/.ini": 644
  "**/.cfg": 644
  "src/templates/*.jinja": 644
  dirs:
  "src/": 755
  "conf/": 755
  "streamlit_pages/**": 755
  "outputs": 775